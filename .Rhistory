if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(x[, xc] * ((100/max(x[, xc]))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(x[, xc],2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
?order
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3)
{
x <- x[order(as.numeric(row.names(x)),decreasing=TRUE),]
x <- .grancompat(x)
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(x[, xc] * ((100/max(x[, xc]))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(x[, xc],2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3)
{
x <- x[order(as.numeric(row.names(x)),decreasing=FALSE),]
x <- .grancompat(x)
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(x[, xc] * ((100/max(x[, xc]))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(x[, xc],2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3)
{
x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=FALSE),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(x[, xc] * ((100/max(x[, xc]))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(x[, xc],2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3,decreasing=FALSE)
{
x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(x[, xc] * ((100/max(x[, xc]))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(x[, xc],2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1,decreasing=TRUE)
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1,decreasing=FALSE)
?order
library(G2Sd)
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
?Rarity
library(G2Sd)
?G2Sd
library(G2Sd)
?read.table
library(G2Sd)
granstat(web_interface=TRUE)
library(G2Sd)
granstat(web_interface=TRUE)
library(G2Sd)
granstat(web_interface=TRUE)
library(G2Sd)
granstat(web_interface=TRUE)
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
pdf(file="hist_gran_jerome.pdf",width=7,height=7)
for (i in 1:ncol(granulo))
granplot(granulo,xc=i,main=paste("Station",colnames(granulo)[i]),cexname=0.7,cexlab=1)
dev.off()
getwd()
install.package(G2Sd)
install.packages(G2Sd)
install.packages("G2Sd")
require(G2Sd)
data(granulo)
granstat(granulo)
granstat(web_interface=T)
granplot(1,granulo)
?granplot
granplot(granulo,1)
granplot(granulo,1,cexlab=1)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3,decreasing=FALSE)
{
x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(class.weight,2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,1,cexlab=1)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3,decreasing=FALSE)
{
#     x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(x[,
xc]), max(x[, xc])/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(class.weight,2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,1,cexlab=1)
x=granulo
xc=1
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
decreasing=FALSE
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
sum.sieve
class.weight = (x[, xc] * 100)/sum.sieve
class.weight
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
class.weight.cum
round(class.weight,2)
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
col.cum="red"
col.hist="gray"
main=""
cexname=0.9
cexlab=1.3
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = seq(0, 100, 20), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
barplot(round(class.weight,2), xlab = "Particule size (microns)",
barplot(class.weight * ((100/class.weight))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
barplot(class.weight * ((100/class.weight)), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
barplot(class.weight * ((100/max(class.weight))), xlab = "Particule size (microns)",
ylab = "Weight (g)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = labels = seq(0, 100, 20), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
axis(2, at = seq(0, 100, 20), labels = seq(0, 100, 20), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
barplot(class.weight * ((100/max(class.weight))), xlab = "Particule size (microns)",
ylab = "Weight (%)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(class.weight), max(class.weight)/5),2), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
barplot(class.weight * ((100/max(class.weight))), xlab = "Particule size (microns)",
ylab = "Weight (%)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(class.weight), max(class.weight)/5),1), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
.libpath()
.libPath()
.libPaths()
install.packages("G2sd")
install.packages("G2Sd")
install.packages("G2Sd")
install.packages("G2Sd")
data(granulo)
granstat(granulo)
require(G2Sd)
data(granulo)
granstat(granulo)
granstat(web_interface=T)
?barplot
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3,decreasing=FALSE)
{
x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (%)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab,ylim=c(0,100))
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(class.weight), max(class.weight)/5),1), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(class.weight,2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
.grancompat <-
function(x)
{
x <- as.data.frame(x)
n.sieve <- nrow(x)
n.sample <- ncol(x)
if (!is.data.frame(x))
stop("dataframe expected.")
if (any(x < 0))
stop("negative entries in dataframe.")
if (any(x > 300))
warning("Some high values are present.", call. = FALSE,immediate.=TRUE)
if (n.sieve!=29)
{
cat("Compatibility progress.... \n \n")
ref_sieve=c(25000,20000,16000,12500,10000,8000,6300,5000,4000,2500,
2000,1600,1250,1000,800,630,500,400,315,250,200,160,125,
100,80,63,50,40,0)
init_df <- as.data.frame(matrix(data=0,ncol=n.sample,nrow=length(ref_sieve)));colnames(init_df) <- colnames(x)
row.names(init_df) <-ref_sieve
if (any(is.na(pmatch(row.names(x),ref_sieve))))
stop("Incorrect sieve values.")
else
{for (sieve in row.names(x))
init_df[sieve,] <- x[sieve,]}
}
else init_df <- x
return(init_df)
}
require(G2Sd)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3,decreasing=FALSE)
{
x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (%)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab,ylim=c(0,100))
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = round(seq(0, max(class.weight), max(class.weight)/5),1), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(class.weight,2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
.grancompat <-
function(x)
{
x <- as.data.frame(x)
n.sieve <- nrow(x)
n.sample <- ncol(x)
if (!is.data.frame(x))
stop("dataframe expected.")
if (any(x < 0))
stop("negative entries in dataframe.")
if (any(x > 300))
warning("Some high values are present.", call. = FALSE,immediate.=TRUE)
if (n.sieve!=29)
{
cat("Compatibility progress.... \n \n")
ref_sieve=c(25000,20000,16000,12500,10000,8000,6300,5000,4000,2500,
2000,1600,1250,1000,800,630,500,400,315,250,200,160,125,
100,80,63,50,40,0)
init_df <- as.data.frame(matrix(data=0,ncol=n.sample,nrow=length(ref_sieve)));colnames(init_df) <- colnames(x)
row.names(init_df) <-ref_sieve
if (any(is.na(pmatch(row.names(x),ref_sieve))))
stop("Incorrect sieve values.")
else
{for (sieve in row.names(x))
init_df[sieve,] <- x[sieve,]}
}
else init_df <- x
return(init_df)
}
data(granulo)
granplot(granulo,1)
granplot <-
function(x,xc=1,hist=TRUE,cum=TRUE,main="",col.cum="red",col.hist="gray",cexname=0.9,cexlab=1.3,decreasing=FALSE)
{
x <- .grancompat(x)
x <- x[order(as.numeric(row.names(x)),decreasing=decreasing),]
#     x <- as.data.frame(x)
um <- as.numeric(row.names(x))
if (pmatch(0,um)!=0 ) um[pmatch(0,um)]="<40"
sum.sieve = sum(x[, xc])
class.weight = (x[, xc] * 100)/sum.sieve
class.weight.cum = round(cumsum(class.weight),2)
if (hist == TRUE & cum == TRUE) {
par(mar = c(5, 4, 4, 4))
barplot(round(class.weight,2), xlab = "Particule size (microns)",
ylab = "Weight (%)", names.arg = um, las = 2, yaxt = "n",
main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab,ylim=c(0,100))
axis(4, at = seq(0, 100, 20), labels = seq(0, 100, 20),
las = 2, col = col.cum, col.axis = col.cum,cex.axis=cexname)
axis(2, at = seq(0, 100, 20), labels = seq(0, 100, 20), las = 2,cex.axis=cexname)
mtext("(% cum) ", 4, line = 2, col = col.cum,font=2,cex=cexlab)
lines(class.weight.cum, col = col.cum, lwd = 1)
}
if (hist == FALSE & cum == TRUE) {
plot(class.weight.cum, type = "l", lwd = 1, xlab = "Particule size (microns)",
ylab = "Percentage cum.(%)", las = 2, xaxt = "n",
xlim = c(0,length(x[, xc]) ), main = main, col = col.cum,cex.axis=cexname,font.lab=2,cex.lab=cexlab)
axis(1, at = 1:length(x[, xc]), labels = um, las = 2,cex.axis=cexname)
}
if (hist == TRUE & cum == FALSE) {
barplot(round(class.weight,2), xlab = "Particule size (microns)", ylab = "Weight (g)",
names.arg = um, las = 2, main = main, col = col.hist,cex.names=cexname,font.lab=2,cex.lab=cexlab)
}
}
granplot(granulo,1)
granplot(granulo,1,cexname=0.7,cexlab=1)
